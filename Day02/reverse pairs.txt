class Solution {
    public int reversePairs(int[] nums) {
        return mergeSort(nums, 0, nums.length - 1);
    }

    private int mergeSort(int[] a, int l, int r) {
        if (l >= r) 
        return 0;
        int m = (l + r) / 2;
        int count = mergeSort(a, l, m) + mergeSort(a, m + 1, r);

        int j = m + 1, k = m + 1, t = 0;
        int[] temp = new int[r - l + 1];

        for (int i = l; i <= m; i++) {
            while (j <= r && (long) a[i] > 2L * a[j]) j++;
            count += j - (m + 1);
            while (k <= r && a[k] < a[i]) temp[t++] = a[k++];
            temp[t++] = a[i];
        }
        while (k <= r) temp[t++] = a[k++];
        System.arraycopy(temp, 0, a, l, r - l + 1);

        return count;
    }
}